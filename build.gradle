buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "io.qameta.allure.gradle.allure:allure-plugin:2.9.6"
    }
}

plugins {
    id 'java'
    id 'io.qameta.allure' version '2.9.6'
    id "org.sonarqube" version "3.4.0.2513"
}

apply plugin: 'io.qameta.allure'

repositories {
    mavenCentral()
}

group 'org.epam'
version '1.0-SNAPSHOT'

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}

ext {
    testngVersion = '7.6.1'
    allureVersion = '2.19.0'
    seleniumVersion = '4.3.0'
    bonigarciaVersion = '5.2.2'
    slf4jVersion = '1.7.36'
    lombokVersion = '1.18.24'
    aspectVersion = '1.9.9.1'
    restAssuredVersion = '5.1.1'
    assertjVersion = '3.23.1'
    jUnitVersion = '5.8.1'
}

dependencies {
    implementation "org.testng:testng:$testngVersion"
    implementation "io.qameta.allure:allure-testng:$allureVersion"
    implementation "io.qameta.allure:allure-junit5:$allureVersion"
    implementation "io.qameta.allure:allure-rest-assured:$allureVersion"
    implementation "org.seleniumhq.selenium:selenium-java:$seleniumVersion"
    implementation "io.github.bonigarcia:webdrivermanager:$bonigarciaVersion"
    implementation "org.slf4j:slf4j-api:$slf4jVersion"
    implementation "org.slf4j:slf4j-log4j12:$slf4jVersion"
    implementation "org.projectlombok:lombok:$lombokVersion"
    testImplementation 'junit:junit:4.13.1'
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"
    testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"
    runtimeOnly "org.aspectj:aspectjweaver:$aspectVersion"
    implementation "io.rest-assured:rest-assured:$restAssuredVersion"
    testImplementation "org.assertj:assertj-core:$assertjVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:$jUnitVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$jUnitVersion"
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
    }
    test {
        java {
            srcDirs = ['src/test/java']
        }
    }
}

test {
    if ("junit" == findProperty("runner")) {
        useTestNG() {
            suites 'src/test/resources/testng.xml'
        }
        options {
            systemProperties(System.getProperties())
        }
    } else if ("junit" == findProperty("runner")) {
        useJUnitPlatform {
            systemProperties System.properties
            systemProperty("junit.jupiter.execution.parallel.enabled", true)
            includeEngines("junit-jupiter")
        }
    }
}

allure {
    adapter.autoconfigure = true
    adapter.aspectjWeaver = true
    version = allureVersion
    useTestNG {
        version = allureVersion
    }
}
